% 1st variant: w/ templates
%  Problem: ...//ddd-context is not exact (if doing exactly as required, then XPath-expression becomes much more difficult)

...
template(X,[element(p,['style="color:red"'],[text(String)])]):-
	X=element('CCC',_,_),
	transform(X/'DDD',DDD),
	transform(name DDD,Name),
	transform(DDD@id,SId),
	String is cat(Name,' id=',SId).	
	
template(X,[element(div,['style="color:purple"'],[text(String)])]):-
	X=element('BBB',_,_),
	transform(name X,Name),
	transform(X@id,SId),
	String is cat(Name,' id=',SId).
...

ABC is 1,  
parse2(x6in,X),  
traverse(X,Res),  
Y=element(top,[],Res),  
parse2(Z,Y).

% 2nd variant: w/o templates

...
/*
Remark:
 without templates everything here gets drastically difficult, because traversal order is key. 
  This means  2 'findall's' cannot just be concatenated again.
 => hence, an explicit pre-order call is needed (as helper predicate)
*/
